<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <mvc:annotation-driven/>
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/admin/codeImg"/>
            <mvc:exclude-mapping path="/admin/login"/>
            <mvc:exclude-mapping path="/goto"/>
            <mvc:exclude-mapping path="/quit"/>
            <bean class="com.nys.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/admin/login"/>
            <mvc:exclude-mapping path="/admin/codeImg"/>
            <mvc:exclude-mapping path="/goto"/>
            <mvc:exclude-mapping path="/quit"/>
            <mvc:exclude-mapping path="/login.jsp"/>
            <mvc:exclude-mapping path="/index.jsp"/>
            <bean class="com.nys.interceptor.ModuleInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <context:component-scan base-package="com.nys"/>
    <!--引用java配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <mvc:default-servlet-handler/>

    <!--配置Spring MVC视图解析-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--
            访问控制器，得到结果时
            这个结果，就是要展示的视图的名字
            ，那么对于一个视图来讲，除了名字
            还有扩展名（什么文件）
            路径（找到这个文件）
        -->
        <!--这里会当做前缀，加到视图名字前面（路径）-->
        <property name="prefix" value="/"/>
        <!--这里会当做后缀，加到视图名字后面（后缀）-->
        <property name="suffix" value=".jsp"/>
    </bean>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>