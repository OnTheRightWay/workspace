<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nys.role.dao.RoleMapper" >
  <resultMap id="RoleMap" type="com.nys.role.domain.Role">
    <id property="roleId" column="role_id"/>
    <result property="name" column="roleName"/>
    <collection property="modules" ofType="com.nys.role.domain.Module">
      <id property="moduleId" column="module_id"/>
      <result property="name" column="moduleName"/>
    </collection>
  </resultMap>
  <select id="findAllRole" resultMap="RoleMap">
    SELECT r.role_id,r.name roleName,
    m.module_id,m.name moduleName
    FROM role_info r LEFT JOIN role_module rm
    ON r.role_id = rm.role_id
    LEFT JOIN module_info m
    ON rm.module_id = m.module_id
  </select>
  <select id="findCount" resultType="int">
    SELECT COUNT(*)
    FROM role_info
  </select>
  <select id="findRoleByRoleId" parameterType="int" resultMap="RoleMap">
    SELECT r.role_id,r.name roleName,
    m.module_id,m.name moduleName
    FROM role_info r LEFT JOIN role_module rm
    ON r.role_id = rm.role_id
    LEFT JOIN module_info m
    ON rm.module_id = m.module_id
    WHERE r.role_id=#{id}
  </select>
  <update id="updateNameByRoleId" parameterType="com.nys.role.domain.Role">
    UPDATE role_info
    SET name=#{name}
    where role_id = #{roleId}
  </update>
  <delete id="deleteModules" parameterType="int">
    DELETE FROM role_module
    WHERE role_id=#{int}
  </delete>
  <insert id="insertModules" parameterType="com.nys.role.domain.Role">
    INSERT INTO role_module
    VALUES
    <foreach collection="moduleIds" item="moduleId" open="(#{roleId}," separator="),(#{roleId}," close=")">
      #{moduleId}
    </foreach>
  </insert>



  <resultMap id="BaseResultMap" type="com.nys.role.domain.Role" >
    <constructor >
      <idArg column="role_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nys.role.domain.Role" >
    <selectKey keyProperty="roleId"
               resultType="java.lang.Integer"
               order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role_info (name)
    values (#{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nys.role.domain.Role" >
    insert into role_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nys.role.domain.Role" >
    update role_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nys.role.domain.Role" >
    update role_info
    set name = #{name,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>